{
  "Comment": "Distributed map that reads CSV file for order data and detects delayed orders",
  "StartAt": "Get records to REMEDIATE Letter",
  "States": {
    "Get records to REMEDIATE Letter": {
      "Type": "Task",
      "Parameters": {
        "TableName": "${DynamoTableName}",
        "FilterExpression": "BatchId = :batchId AND RecordStatus = :status",
        "ExpressionAttributeValues": {
          ":batchId": {"S.$": "$.BatchId"},
          ":status": {"S.$": "$.RecordStatus"}
        }
      },
      "Resource": "arn:aws:states:::aws-sdk:dynamodb:scan",
      "ResultPath": "$.ScanResult",
      "Next": "Process PCLM Remediation"
    },
    "Process PCLM Remediation": {
      "Type": "Map",
      "ItemsPath": "$.ScanResult.Items",
      "Iterator": {
        "StartAt": "Transform Input",
        "States": {
          "Transform Input": {
            "Type": "Pass",
            "Parameters": {
              "Id.$": "$.Id.S",
              "PclmType.$": "$.PclmType.S",
              "BatchId.$": "$.BatchId.S",
              "RecordStatus.$": "$.RecordStatus.S",
              "AccountNumber.$": "$.AccountNumber.S",
              "MemberNumber.$": "$.MemberNumber.S",
              "CreatedTime.$": "$.CreatedTime.S",
              "ModifiedTime.$": "$.ModifiedTime.S",
              "DecisionDate.$": "$.AsOfDate.S",
              "AsOfDate.$": "$.AsOfDate.S",
              "AccountDetails": {
                "NewCreditLimit.$": "$.AccountDetails.M.NewCreditLimit.S",
                "OldCreditLimit.$": "$.AccountDetails.M.OldCreditLimit.S",
                "JointAccountIndicator.$": "$.AccountDetails.M.JointAccountIndicator.Bool",
                "ErrorMessage.$": "$.AccountDetails.M.ErrorMessage.S",
                "PendingTransactionAmount.$": "$.AccountDetails.M.PendingTransactionAmount.S",
                "IsEligibleForProductCodeUpdate.$": "$.AccountDetails.M.IsEligibleForProductCodeUpdate.Bool",
                "ProductCodeUpdateStatus.$": "$.AccountDetails.M.ProductCodeUpdateStatus.S",
                "NewProductCode.$": "$.AccountDetails.M.NewProductCode.S",
                "OldProductCode.$": "$.AccountDetails.M.OldProductCode.S",
                "IsMemoSuccessful.$": "$.AccountDetails.M.IsMemoSuccessful.Bool",
                "IsCreditLimitSuccessful.$": "$.AccountDetails.M.IsCreditLimitSuccessful.Bool",
                "OldProductMax.$": "$.AccountDetails.M.OldProductMax.S",
                "CardType.$": "$.AccountDetails.M.CardType.S",
                "IsJointAccountPrimaryCardHolder.$": "$.AccountDetails.M.IsJointAccountPrimaryCardHolder.Bool",
                "RewardStrategy.$": "$.AccountDetails.M.RewardStrategy.S",
                "OldProductMin.$": "$.AccountDetails.M.OldProductMin.S",
                "FicoScore.$": "$.AccountDetails.M.FicoScore.S",
                "FicoScoreReasonCode1.$": "$.AccountDetails.M.FicoScoreReasonCode1.S",
                "FicoScoreReasonCode2.$": "$.AccountDetails.M.FicoScoreReasonCode2.S",
                "FicoScoreReasonCode3.$": "$.AccountDetails.M.FicoScoreReasonCode3.S",
                "FicoScoreReasonCode4.$": "$.AccountDetails.M.FicoScoreReasonCode4.S",
                "FicoScoreReasonCode5.$": "$.AccountDetails.M.FicoScoreReasonCode5.S",
                "BehaviorScoreReasonCode1.$": "$.AccountDetails.M.BehaviorScoreReasonCode1.S",
                "BehaviorScoreReasonCode2.$": "$.AccountDetails.M.BehaviorScoreReasonCode2.S",
                "AdverseReasonCode1.$": "$.AccountDetails.M.AdverseReasonCode1.S",
                "AdverseReasonCode2.$": "$.AccountDetails.M.AdverseReasonCode2.S",
                "AdverseReasonCode3.$": "$.AccountDetails.M.AdverseReasonCode3.S",
                "AdverseReasonCode4.$": "$.AccountDetails.M.AdverseReasonCode4.S",
                "JanusScore.$": "$.AccountDetails.M.JanusScore.S",
                "JanusScoreAsOfDate.$": "$.AccountDetails.M.JanusScoreAsOfDate.S",
                "BureauDataReceivedDate.$": "$.AccountDetails.M.BureauDataReceivedDate.S"
              }
            },
            "ResultPath": "$",
            "Next": "is pcli or pcld",
            "Catch": [
              {
                "ErrorEquals": ["States.ALL"],
                "Next": "Handle Missing Fields",
                "ResultPath": "$.TransformError"
              }
            ]
          },
          "Handle Missing Fields": {
            "Type": "Pass",
            "Parameters": {
              "Id": "",
              "PclmType": "",
              "BatchId": "",
              "RecordStatus": "",
              "AccountNumber": "",
              "MemberNumber": "",
              "CreatedTime": "",
              "ModifiedTime": "",
              "DecisionDate": "",
              "AsOfDate": "",
              "AccountDetails": {
                "NewCreditLimit": "",
                "OldCreditLimit": "",
                "JointAccountIndicator": false,
                "ErrorMessage": "",
                "PendingTransactionAmount": "",
                "IsEligibleForProductCodeUpdate": false,
                "ProductCodeUpdateStatus": "",
                "NewProductCode": "",
                "OldProductCode": "",
                "IsMemoSuccessful": false,
                "IsCreditLimitSuccessful": false,
                "OldProductMax": "",
                "CardType": "",
                "IsJointAccountPrimaryCardHolder": false,
                "RewardStrategy": "",
                "OldProductMin": "",
                "FicoScore": "",
                "FicoScoreReasonCode1": "",
                "FicoScoreReasonCode2": "",
                "FicoScoreReasonCode3": "",
                "FicoScoreReasonCode4": "",
                "FicoScoreReasonCode5": "",
                "BehaviorScoreReasonCode1": "",
                "BehaviorScoreReasonCode2": "",
                "AdverseReasonCode1": "",
                "AdverseReasonCode2": "",
                "AdverseReasonCode3": "",
                "AdverseReasonCode4": "",
                "JanusScore": "",
                "JanusScoreAsOfDate": "",
                "BureauDataReceivedDate": ""
              }
            },
            "ResultPath": "$",
            "Next": "is pcli or pcld"
          },
          "is pcli or pcld": {
            "Type": "Choice",
            "Choices": [
              {
                "Next": "PCLI_Generate_Letter",
                "Variable": "$.PclmType",
                "StringMatches": "PCLI"
              },
              {
                "Next": "PCLD_Generate_Letter",
                "Variable": "$.PclmType",
                "StringMatches": "PCLD"
              }
            ]
          },
          "PCLI_Generate_Letter": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
              "Payload.$": "$",
              "FunctionName": "${PCLI_LetterGenerationLambda}"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException",
                  "BankMWSystemError",
                  "HerculesSystemError",
                  "ErdcSystemError"
                ],
                "MaxAttempts": 3,
                "BackoffRate": 2,
                "Comment": "Retry middleware and hercules system error",
                "MaxDelaySeconds": 5,
                "IntervalSeconds": 2
              }
            ],
            "ResultPath": "$.output",
            "End": true
          },
          "PCLD_Generate_Letter": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
              "Payload.$": "$",
              "FunctionName": "${PCLD_LetterGenerationLambda}"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException",
                  "BankMWSystemError",
                  "HerculesSystemError",
                  "ErdcSystemError"
                ],
                "MaxAttempts": 3,
                "BackoffRate": 2,
                "Comment": "Retry middleware and hercules system error",
                "MaxDelaySeconds": 5,
                "IntervalSeconds": 2
              }
            ],
            "ResultPath": "$.output",
            "End": true
          }
        }
      },
      "MaxConcurrency": 350,
      "Label": "ProcessPCLMRemediation",
      "ResultPath": "$.output",
      "ToleratedFailurePercentage": 50,
      "End": true
    }
  }
}