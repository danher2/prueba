Based on the image you've uploaded of your Go project repository, here's a list of the files and directories along with their typical purpose:

ci-scripts - This directory likely contains scripts used in continuous integration processes, helping automate tasks like testing, building, and deploying the application.
src - This directory holds the source code files for the project. It's where most of the application logic and Go files will be stored.
test/mock - This directory is used for storing mock objects and data for testing purposes. It helps in unit testing by providing controlled inputs and expected outputs.
.gitignore - A configuration file for Git that specifies intentionally untracked files to ignore. Itâ€™s used to exclude files from the Git repository, such as build outputs or temporary files.
.gitlab-ci.yml - This file contains the configuration for GitLab CI/CD pipelines, defining how the project should be built, tested, and deployed on GitLab.
.goreleaser.yml - Configuration file for GoReleaser, a tool that simplifies the release process of Go projects by automating the building, packaging, and publishing of Go binaries.
CHANGELOG.md - A markdown file used to document all changes and version history of the project. It typically lists new features, fixes, and breaking changes.
README.md - A markdown file providing an overview of the project, its purpose, and instructions on how to set up and use the project.
go-discrep.txt - Likely a text file used to store discrepancies, notes, or specific details about the Go project that require attention or are important to the development process.
go.mod - A file automatically generated by Go, declaring the module path used by other modules to import it. It also defines the precise set of package versions used to build the project.
go.sum - A file that contains hashes of the content of specific versions of all dependencies required by your project, providing enhanced integrity checks.
local-build.sh - A shell script typically used to execute local builds of the project. It might include commands to compile the project, run tests, or perform other build-related tasks.
main.go - The main entry point for the Go application. This file usually contains the main function that kicks off the execution of the application.
usaa_cert_chain.cert - A certificate file, potentially used to establish secure connections or authenticate against services, containing a chain of certificates for a security credential.
These files and directories form the foundation of a typical Go project structured for development with integration into CI/CD pipelines and possibly prepared for secure deployments and package management. If you need more details on any specific file or setup, feel free to ask!